<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>序列建模：循环和递归网络</title>
      <link href="/myblog/2019/08/24/%E5%BA%8F%E5%88%97%E5%BB%BA%E6%A8%A1%EF%BC%9A%E5%BE%AA%E7%8E%AF%E5%92%8C%E9%80%92%E5%BD%92%E7%BD%91%E7%BB%9C/"/>
      <url>/myblog/2019/08/24/%E5%BA%8F%E5%88%97%E5%BB%BA%E6%A8%A1%EF%BC%9A%E5%BE%AA%E7%8E%AF%E5%92%8C%E9%80%92%E5%BD%92%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<p>循环神经网络（recurrent neural network）简称RNN(Rumelhart et al., 1986c)，就像卷积神经网络专门用于处理网格化数据X(如一个图像)，循环神经网络是专门用于处理序列｛｝</p>]]></content>
      
      
      
        <tags>
            
            <tag> DL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吴恩达机器学习笔记(一)</title>
      <link href="/myblog/2019/08/13/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
      <url>/myblog/2019/08/13/%E5%90%B4%E6%81%A9%E8%BE%BE%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是机器学习？"><a href="#什么是机器学习？" class="headerlink" title="什么是机器学习？"></a>什么是机器学习？</h2><p>即使是在机器学习从业者中，也没有对机器学习的统一定义。下面说说一些现有的机器学习定义。</p><p>1.Arthur Samuel对机器学习的定义：在没有明确设置的情况下，使计算机具有学习能力的研究领域。（比较不正式，也比较陈旧）</p><p><div align="center"><img src="1.jpg" alt><br>（Samuwl成名是在1950年代，他编写了一个跳棋游戏程序，惊讶的是他本人并不是一个玩跳棋的高手，他所做的是使程序自己对弈几万次，通过观察哪些布局容易赢、哪些布局容易输，一段时间后，跳棋程序就学到了什么是好的布局、什么是不好的布局，最终程序学会了玩跳棋，并比Samuel玩得好，因为比起人，计算机更有耐心来对弈这么多局，获得丰富的跳棋经验）</div></p><a id="more"></a><p>2.一个更新的定义，由TomMitchell提出：计算机程序从经验E中学习解决某一任务T进行某一性能度量指标P,通过P测定在T上面的表现因经验E而提高。</p><p><div align="center"><img src="2.jpg" alt><br>（对于跳棋游戏而言，经验E就是程序与自己下几万次跳棋，任务T就是下跳棋，性能度量P就是与新对手玩跳棋时赢得概率）</div></p><p><div align="center"><img src="0.jpg" alt></div></p><center>一个检测你之前有没有学懂得问题</center><p>我们将学到各种不同类型得学习算法，最主要得两类是监督学习和无监督学习。其他有：强化学习、推荐系统<br>简单而言，监督学习就是我们会教计算机做某件事情，而在无监督学习中，我们让计算机自己学习。强化学习和推荐系统我们以后会说。</p>]]></content>
      
      
      
        <tags>
            
            <tag> ML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视频异常检测（VAD）综述(译)</title>
      <link href="/myblog/2019/07/13/%E8%A7%86%E9%A2%91%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%BB%BC%E8%BF%B0/"/>
      <url>/myblog/2019/07/13/%E8%A7%86%E9%A2%91%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B%E7%BB%BC%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="基于深度学习的无监督和半监督视频异常检测方法综述"><a href="#基于深度学习的无监督和半监督视频异常检测方法综述" class="headerlink" title="基于深度学习的无监督和半监督视频异常检测方法综述"></a>基于深度学习的无监督和半监督视频异常检测方法综述</h1><p><img src="https://i.loli.net/2019/07/11/5d26f2aadd3ae37823.png" alt></p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>​在监控应用中，视频是主要的信息源，但大多数时候没有标签。本文综述了最新的视频异常检测方法，并根据模型的类型和检测的标准进行分类。我们实现了简单的研究来理解不同的方法，并提出时空异常检测的评价标准。</p><a id="more"></a><h2 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h2><p>无监督方法、异常检测、表示学习、自动编码器、长短时记忆、生成式对抗网、变分自动编码器、预测模型。</p><h2 id="1绪论"><a href="#1绪论" class="headerlink" title="1绪论"></a>1绪论</h2><p>​随着生成式模型（如VAE、GANs、LSTMs等）的出现，无监督表示学习成为了一个重要的领域。在机器学习和数据挖掘中，异常检测是无监督学习有名的子领域。由于图像的高维结构和帧间的非局域时间变化，使得图像和视频的异常检测具有挑战性。</p><p>我们回顾1.深度卷积架构来进行特征或者表示端到端学习。2.专门用于视频异常检测任务的预测和生成式模型。异常检测是一项无监督学习任务，其目标是识别数据中的异常的模式或运动（不常见或罕见的事件）。此外，异常很少被标注，并且标记了的数据很少可用于训练一个深度卷积网络来分离正常类和异常类。正常类的样例包含频繁出现的目标和顾虑的前景运动，而异常类包含了各种类型的稀有事件和未见过的目标，这被归纳为一类。所以这项任务很难。无异常的长视频流是可用的，用来为视频流上的移动窗口构建表示，在检测异常运动和外观(如场景中的异常对象)时，估计正常类的行为表现。</p><p>​给定一组没有异常的训练样本，异常检测的目标是设计或者学习一个特征表示（功能），能够捕获正常的运动和空间外观模式（这里，我感觉模式就是运动和空间外观的变化规律）。任意一个远离正常的异常可以通过 （几何上地在一个向量空间中 或 在给定一个模型的后验概率中）测量近似误差来判别，或者通过给定过去的值，对未来样本的条件概率建模，并在训练好的预测模型上测量测试样本的预测误差 ，这样就考虑了视频中的时间结构。</p><h3 id="1-1-异常检测"><a href="#1-1-异常检测" class="headerlink" title="1.1 异常检测"></a>1.1 异常检测</h3><p>​异常检测是一个无监督模式识别任务，可以在不同的统计模型下定义。在本研究中，我们将探讨用主成分分析进行线性近似的模型，用各种类型的自动编码器进行非线性近似的模型，以及最后的深层生成模型。</p><p>直观地，观察一个在不同变换作用下的复杂系统，正常的表现可以通过一些样本点描述，并根据上述的正常样本表现样例建立一个统计模型，对未见过的样例泛化能力很好。<br>正常类的分布$\mathscr{D}$可以通过训练样本$\mathbf{x}_{i} \in X_{\text { train }}$来估计，通过建立一个表示$f_{\theta} : X_{\text { train }} \rightarrow \mathbb{R}$,最小化模型整个训练样本的预测损失</p><center>$\theta^{*}=\underset{\theta}{\operatorname{argmin}} \sum_{\mathbf{x}_{i} \in X_{\text { train }}} L_{\mathscr{D}}\left(\theta ; \mathbf{x}_{i}\right)=\underset{\theta}{\operatorname{argmin}} \sum_{\mathbf{x}_{i} \in X_{\text { train }}}\left\|f_{\theta}\left(\mathbf{x}_{i}\right)-\mathbf{x}_{i}\right\|^{2}(式1)$</center><p>现在，测试样本$\mathbf{x}_{j} \in X_2{\text{ test }}$在这个表示$f_{\theta^{*}}$下的偏离程度被用来评估异常得分,$a\left(\mathbf{x}_{j}\right)=\left|f_{\theta^{*}}\left(\mathbf{x}_{j}\right)-\mathbf{x}_{j}\right|_{2} $用来度量偏离程度。对于上述模型，异常点是一些在模型$f_{\theta^{*}}​$评估后近似很差的样本点。通过在异常得分上评估一个阈值$a_{j}&gt;T_{\text { thresh }}​$来实现检测。阈值是检测算法的一个参数，阈值的变化对检测性能的影响将会在ROC曲线下面积那一节讨论。对于概率模型，异常点被定义为那些位于在输入训练分布$P(\mathbf{x} | \theta)​$的低密度或低浓度区域的样本点。</p><p>​在动作识别、动作相似度、场景分类、目标识别、语义视频分割、人体姿态估计、人体行为识别等多种任务中，表示学习使得视频数据的特征提取变得自动化。视频中的无监督学习任务包括异常检测、无监督表示学习、视频生成模型、视频预测。</p><h3 id="1-2-数据集"><a href="#1-2-数据集" class="headerlink" title="1.2 数据集"></a>1.2 数据集</h3><p>我们现在定义了视频异常检测问题的设置。被考虑的视频来自一个监控摄像头，背景保持静止，而前景则是行人、交通等移动物体的图像。异常事件是指与训练集中观察到的正常模式相背离的外观和运动模式的变化。图1中展示了几个例子：</p><p><img src="https://i.loli.net/2019/07/11/5d26ad398ed3b27732.png" alt="图1"></p><center>图1：前两行是UCSD,最下面一行是CUHK Avenue</center><p>​    虽然这里我们没有详尽，但是我们列举了一些经常被用来评估的数据集。<strong>UCSD数据集</strong>是由行人组成的，在一个通常有行人沿着道路行走的场景中，异常时刻的实例对应于物体的出现，如自行车、轮椅和汽车。还有，在不寻常的地方行走的人也被认为是不正常的。在<strong>CUHK Avenue数据集</strong>中，异常对应的是一些奇怪的行为，比如一个人扔纸或包，向不寻常的方向移动，以及像包和自行车这样的不寻常物体的出现。在<strong>地铁进出站数据集</strong>中，人们在错误的方向移动，闲逛等被认为是异常现象。UMN数据集由展示异常的人群活动的视频组成，是视频异常检测问题的一个特例。火车数据集[12]包含火车上的移动人员。这些异常事件主要是由于火车上的人不寻常的移动。最后，伦敦玛丽女王大学的u型转弯数据集[13]包含了正常的交通和异常事件，如横穿马路和消防车的移动。近年来，有人提出了一种基于受控环境的LV数据集，并给出了具有挑战性的在线视频异常检测实例。</p><h2 id="2视频异常检测中的表示学习"><a href="#2视频异常检测中的表示学习" class="headerlink" title="2视频异常检测中的表示学习"></a>2视频异常检测中的表示学习</h2><p>因为空间结构和局部时间的变化性，视频是高维度信号。视频异常检测的一个重要问题是学习表示输入样本空间到一个n维向量$f_{\theta} : \mathscr{X} \rightarrow \mathbb{R}^{d}$。学习特征的这个想法是去自动的找到一个关于输入空间好的表示,这考虑了这个问题重要的先验信息。根据天下没有免费午餐定理指出，对于每一个训练分布$\mathscr {D}$，不存在通用的学习器。继已建立的视频异常检测工作之后，该任务具体包括了：检测模型的偏离程度，如静态背景、正常人群的外观、光流运动、轨迹的变化等先验信息。建立一个参数化的模型$f_{\theta} : x \rightarrow \mathcal{Z} \rightarrow x$ ，在这个研究中，我们主要研究重构输入的表示，而潜在空间Z被限制不随输入的变化而改变，比如亮度的变化、场景中物体的平移等这些并没有偏离正常运动模式的变化。这提供了一种方法引入先验信息来重建正常样本。</p><h3 id="2-1分类"><a href="#2-1分类" class="headerlink" title="2.1分类"></a>2.1分类</h3><p>本文的主要目标是为目前基于无监督和半监督方法的视频异常检测方法做一个简要的综述。本文将基本的视频表示或模型描述如下：</p><p>1） <strong>用来重构的表示学习</strong> ：采用主成分分析(PCA)、自动编码器(AEs)等方法对图像（image）或运动(flow)进行不同的线性和非线性变换,这就为监控录像中的不良行为建立了模型。在重构很差的那种偏离程度表现为异常。</p><p>2）<strong>预测模型</strong>：</p>]]></content>
      
      
      
        <tags>
            
            <tag> DL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019.7.4梁老师组会笔记</title>
      <link href="/myblog/2019/07/04/2019.7.4%E6%A2%81%E8%80%81%E5%B8%88%E7%BB%84%E4%BC%9A%E7%AC%94%E8%AE%B0/"/>
      <url>/myblog/2019/07/04/2019.7.4%E6%A2%81%E8%80%81%E5%B8%88%E7%BB%84%E4%BC%9A%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>小周：</p><p>团队决策对比个人决策</p><p>结论：在团队内部差距越小的情况下，得到的决策效果比起个人最优决策还要好</p><a id="more"></a><p>梁老师：</p><p>主要是认知与心理学与深度学习结合，目前的这些工作在网上很少找到</p><p>希望你们学习有定力，希望能看到你们投入</p><p>谷老师：</p><p>我这边有个和你挺像的，做语音方面的，结论是个人最优一定优于团队决策，团队会把噪声考虑进去，人越多，越沟通，反倒是发生错误的概率越大</p><p>小朱：</p><p>pytorch结果不太一样</p><p>看论文：看题目，看摘要，看结论</p><p>这可能只花费15mins</p><p>如果在看摘要的过程中，发现不匹配的话，</p><p>如果有用的话，看introduction，再看图、表、实验，这可能会花费30mins</p><p>主要看论文的思路是什么，它多么有效</p><p>如果很匹配的话，则需要精读，这可能会花1-3天的时间</p><p>成功人士一年能看1500篇论文，但不代表都是精度</p><p>假设每篇度15mins,一天读五篇很有困难吗</p><p>录用论文的共性：<br>1.性能，要要有提高（或者你有很特殊的idea）。</p><p>2.idea不能太发散，如果有太多idea，一定要有很好的逻辑把他们串起来。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 组会笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019.5.31梁老师组会笔记</title>
      <link href="/myblog/2019/05/31/2019.5.31%E6%A2%81%E8%80%81%E5%B8%88%E7%BB%84%E4%BC%9A%E7%AC%94%E8%AE%B0/"/>
      <url>/myblog/2019/05/31/2019.5.31%E6%A2%81%E8%80%81%E5%B8%88%E7%BB%84%E4%BC%9A%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>图像处理，最开始描述子用来表示特征，局部特征<br>脑科学、认知学、心理学<br>图像中：一条直线、一个圆；梯度不变，梯度均匀变化<br><a id="more"></a><br>人在认知图像特征的时候不是依靠全局特征，而是依靠局部特征<br>局部梯度变化的集合来表示这个点<br>每个点都统计局部特征，再来看它的分布 bag of words<br>深度学习本质上也是用深层的网络中提取这种bags of words<br>区别：以前是直接从图像中提取出特征，而神经网络是不断从特征图中提取特征<br>以前的方法之所以不太好，欲速则不达<br>实际中计算机如何实现求连续函数的梯度，不是简单的做差去平均，而是用一阶高斯函数卷积<br>高斯函数怎么来的，心理学，盯住一个东西，周围是模糊的，越远越模糊<br>训练之后神经网络中的卷积核就是0阶高斯、1阶高斯、2阶高斯等<br>离散空间中也有高斯核<br>17：47 周颖学姐<br>目标检测-&gt;半监督训练目标间的关系，j个关系训练j个决策树<br>生成模型 exp(AY)<br>决策树怎么跑无标签数据？怎么用无标签数据来提高模型的效果？ </p><h2 id="用于神经网络置信度"><a href="#用于神经网络置信度" class="headerlink" title="用于神经网络置信度"></a>用于神经网络置信度</h2><p>训练数据外的数据被视为异常<br>18:32 王倩楠学姐<br>内存溢出问题，图像大小256，老师说可以把图缩小为128*128<br>18：44 谷老师<br>人与人交流时情感<br>表情、语气、姿势都能够表达情感<br>提取最有效的特征，比如说语音的大小<br>特征提取-》特征选择-》分类</p>]]></content>
      
      
      
        <tags>
            
            <tag> 组会笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux配置pytorch</title>
      <link href="/myblog/2019/01/07/linux%E9%85%8D%E7%BD%AEpytorch/"/>
      <url>/myblog/2019/01/07/linux%E9%85%8D%E7%BD%AEpytorch/</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu16-04-Python3-6-Cuda9-2-Cudnn7-2-Pytorch0-4-1"><a href="#Ubuntu16-04-Python3-6-Cuda9-2-Cudnn7-2-Pytorch0-4-1" class="headerlink" title="Ubuntu16.04+Python3.6+Cuda9.2+Cudnn7.2+Pytorch0.4.1"></a>Ubuntu16.04+Python3.6+Cuda9.2+Cudnn7.2+Pytorch0.4.1</h1><p>本博客所有所需文件<a href="https://pan.baidu.com/s/1LFKZb94R41DL9GZSK_lPKg" target="_blank" rel="noopener">百度云链接</a>(提取码：nl85)</p><h2 id="一-安装双系统（win10-ubuntu16-04"><a href="#一-安装双系统（win10-ubuntu16-04" class="headerlink" title="一.安装双系统（win10+ubuntu16.04)"></a>一.安装双系统（win10+ubuntu16.04)</h2><p>1.在win10下载<strong>Rufus</strong>(启动盘制作工具)<a href="https://rufus.ie/" target="_blank" rel="noopener">官网下载</a>、<a href="https://download.csdn.net/download/wqq1027/10861124?utm_source=bbsseo" target="_blank" rel="noopener">csdn下载</a><br>2.下载<strong>Ubuntu16.04</strong>镜像<a href="http://www.ubuntu.org.cn/download/desktop" target="_blank" rel="noopener">官网下载</a>、<a href="http://mirrors.ustc.edu.cn/ubuntu-releases/16.04/" target="_blank" rel="noopener">中科大源</a>、<a href="http://mirrors.aliyun.com/ubuntu-releases/16.04/" target="_blank" rel="noopener">阿里云源</a>、<a href="http://mirror.lzu.edu.cn/ubuntu-releases/16.04/" target="_blank" rel="noopener">兰州大学源</a>、<a href="http://mirrors.zju.edu.cn/ubuntu-releases/16.04/" target="_blank" rel="noopener">浙江大学源</a><br>3.用Rufus制作好启动盘，进入<strong>BIOS</strong>，选择U盘启动。<a href="https://blog.csdn.net/jesse_mx/article/details/61425361#comments" target="_blank" rel="noopener">制作教程</a><br>4.选择Install Ubuntu,中间选择<strong>与win10共存</strong>（不要清除整个磁盘），直到安装完成，拔下U盘,点击立即重启<br><a id="more"></a><br>-注：如果开机启动后发现只有ubuntu，不要着急，开机后终端输入以下命令，  下次开机就能看到win10了:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install grub</span><br></pre></td></tr></table></figure></p><h2 id="二-Ubuntu-更改下载源为国内源"><a href="#二-Ubuntu-更改下载源为国内源" class="headerlink" title="二.Ubuntu 更改下载源为国内源"></a>二.Ubuntu 更改下载源为国内源</h2><p>1.备份原来的源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cp /etc/apt/sources.list /etc/apt/sources_init.list</span><br></pre></td></tr></table></figure></p><p>2.输入命令修改sources.list文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gedit /etc/apt/sources.list</span><br></pre></td></tr></table></figure></p><p>3.在文件最前面添加以下条目（清华源,如果要添加其他源，就<a href="https://blog.csdn.net/s124295707070/article/details/86569847" target="_blank" rel="noopener">点我</a>）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></p><p>4.更新源<br>  <figure class="highlight plain"><figcaption><span>apt-get update```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5.复损坏的软件包，尝试卸载出错的包，重新安装正确版本</span><br><span class="line">  ```sudo apt-get -f install</span><br></pre></td></tr></table></figure></p><h2 id="三-安装NVIDIA驱动"><a href="#三-安装NVIDIA驱动" class="headerlink" title="三.安装NVIDIA驱动"></a>三.安装NVIDIA驱动</h2><p>1.去<a href="https://www.geforce.cn/drivers" target="_blank" rel="noopener">NVIDIA官网</a>下载合适的驱动(我的是NVIDIA-Linux-x86_64-396.18)(驱动文件最好放在主文件夹下)<br>2.软件和更新 -&gt; 附加驱动 -&gt; 继续使用手动安装的驱动<br>3.准备工作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lsmod | grep nouveau</span><br></pre></td></tr></table></figure></p><p>   ubuntu自带的nouveau驱动会影响安装 若有输出,执行以下几步，没有的话就跳到4<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd /etc/modprobe.d</span><br><span class="line">$ sudo touch blacklist-nouveau.conf</span><br><span class="line">$ sudo gedit blacklist-nouveau.conf</span><br></pre></td></tr></table></figure></p><p>  在打开的文件中输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=0</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo update-initramfs -u</span><br><span class="line">$ reboot</span><br></pre></td></tr></table></figure><p>重启后 重新从三.3开始<br>4.安装驱动<br>  卸载掉原有驱动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get remove --purge nvidia-*</span><br></pre></td></tr></table></figure></p><p>  CTRL + ALT +F1 进入字符界面,以下两行命令需要记下来在进入前记下来<br>  注意：CTRL + ALT + F7 是回到图形界面，不过本文从始至终不需要从字符界面回到图形界面<br>  获取权限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod a+x NVIDIA-Linux-x86_64-396.18.run</span><br></pre></td></tr></table></figure></p><p>  安装驱动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  sudo ./NVIDIA-Linux-x86_64-396.18.run -no-x-check -no-nouveau-check -no-opengl-files</span><br></pre></td></tr></table></figure></p><p>  -no-opengl-files 意思是不安装opengl，如果安装的话可能会导致循环登陆！<br>  重启<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ reboot</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvidia-smi</span><br></pre></td></tr></table></figure><p>如果出现一个表格，则安装完成</p><h2 id="四-安装python3-6并设为默认-参考来源"><a href="#四-安装python3-6并设为默认-参考来源" class="headerlink" title="四.安装python3.6并设为默认(参考来源)"></a>四.安装python3.6并设为默认(<a href="https://www.jianshu.com/p/2a5cd519e583" target="_blank" rel="noopener">参考来源</a>)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ add-apt-repository ppa:jonathonf/python-3.6#添加ppa到系统</span><br><span class="line">$ apt-get update#更新</span><br><span class="line">$  sudo apt-get install python3.6-dev</span><br><span class="line">$  sudo apt-get install python3.6-gdbm</span><br><span class="line">ls -l /usr/bin | grep python#查看python命令指向：</span><br><span class="line">rm /usr/bin/python#删除原有python软连接</span><br><span class="line">ln -s /usr/bin/python3.6 /usr/bin/python#建立python到python3.6新的软链接</span><br><span class="line">apt-get install python3-pip#安装python3版本pip</span><br><span class="line">ln -s /usr/bin/pip3 /usr/bin/pip#建立pip到pip3的软连接。</span><br></pre></td></tr></table></figure><h2 id="五-安装cuda9-2-148-396-37-linux"><a href="#五-安装cuda9-2-148-396-37-linux" class="headerlink" title="五.安装cuda9.2.148_396.37_linux"></a>五.安装cuda9.2.148_396.37_linux</h2><p>去Cuda官网下载Cuda9.2<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo sh cuda9.2.148_396.37_linux.run #注意：提示安装驱动时选否</span><br><span class="line">$ sudo gedit /etc/profile</span><br></pre></td></tr></table></figure></p><p>添加如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/local/cuda-9.2/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/cuda-9.2/lib64\$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure></p><p>保存，重启<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/cuda-9.2/samples/1_Utilities/deviceQuery</span><br><span class="line">$ sudo make</span><br><span class="line">$ ./deviceQuery</span><br></pre></td></tr></table></figure></p><p>结果如果是 result = PASS 则安装成功<br>-注： 若要卸载重装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/cuda/bin</span><br><span class="line">$ sudo ./uninstall_cuda_9.2.pl</span><br></pre></td></tr></table></figure></p><h2 id="六-安装Cudnn7-2-1-38"><a href="#六-安装Cudnn7-2-1-38" class="headerlink" title="六.安装Cudnn7.2.1.38"></a>六.安装Cudnn7.2.1.38</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf ./cudnn-9.2-linux-x64-v7.2.1.38.tgz#也可以手动右键解压（提取）</span><br><span class="line">cd cuda/include</span><br><span class="line">sudo cp cudnn.h /usr/local/cuda/include #复制头文件</span><br><span class="line">cd ..</span><br><span class="line">cd lib64</span><br><span class="line">sudo cp lib* /usr/local/cuda/lib64/ #复制动态链接库</span><br><span class="line">cd /usr/local/cuda/lib64/</span><br><span class="line">sudo rm -rf libcudnn.so libcudnn.so.7 #删除原有动态文件</span><br><span class="line">sudo ln -s libcudnn.so.7.2.1 libcudnn.so.7 #生成软衔接</span><br></pre></td></tr></table></figure><p>注意这里要和自己下载的cudnn版本对应，可以在/usr/local/cuda/lib64下查看自己libcudnn的版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s libcudnn.so.7 libcudnn.so #生成软链接</span><br></pre></td></tr></table></figure></p><p>下面一步至关重要：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ldconfig -v</span><br></pre></td></tr></table></figure></p><p>必须在/usr/local/cuda/lib64/目录下执行，否则可能会报libcudnn.so.7: cannot open shared object file: No such file or directory<br><strong>或者</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ldconfig /usr/local/cuda/lib64</span><br></pre></td></tr></table></figure></p><p>至此，Cudnn配置完成</p><h2 id="七-安装Pytorch0-4-1"><a href="#七-安装Pytorch0-4-1" class="headerlink" title="七.安装Pytorch0.4.1"></a>七.安装Pytorch0.4.1</h2><p>下载<br>  <a href="http://pytorch.org/get-started/previous-versions/" target="_blank" rel="noopener">官网下载</a><br>安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip install torch-0.4.1-cp36-cp36m-linux_x86_64.whl</span><br></pre></td></tr></table></figure></p><p>如果需要安装python3的包，可以按如下格式安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip isntall numpy -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></p><h2 id="八-安装Pycharm"><a href="#八-安装Pycharm" class="headerlink" title="八.安装Pycharm"></a>八.安装Pycharm</h2><p>下载LInux 社区版（Community）<br><a href="http://www.jetbrains.com/pycharm/download/#section=linux" target="_blank" rel="noopener">官网下载</a><br><a href="https://blog.csdn.net/zhuanshu666/article/details/73554885" target="_blank" rel="noopener">安装方法</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> DL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
